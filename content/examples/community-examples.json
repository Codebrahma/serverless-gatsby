[
 {
    "name": "AWS-Demo-Java-Spring-Cloud-Function-Serverless",
    "description": "If Java is your choice of programming language-Spring Cloud Function,Serverless Framework makes a great technology stack. It boosts developer productivity by decoupling from Vendor specific FaaS API, and deployment activities.",
    "githubUrl": "https://github.com/mbsambangi/aws-java-spring-cloud-function-demo"
 }, 	
 {
    "name": "Serverless Architecture Boilerplate",
    "description": "Boilerplate to organize and deploy big projects using Serverless and CloudFormation on AWS",
    "githubUrl": "https://github.com/msfidelis/serverless-architecture-boilerplate"
 },
 {
    "name": "bablebot",
    "description": "Lambda + API Gateway: Zero-to-chatbot in <10 lines of JS. Built-in integrations for Messenger, Telegram, Kik, Line, Twilio, Skype, and Wechat. Or roll your own!",
    "githubUrl": "https://github.com/abiglobalhealth/babelbot"
 },
 {
    "name": "jwtAuthorizr",
    "description": "Custom JWT Authorizer Lambda function for Amazon API Gateway with Bearer JWT",
    "githubUrl": "https://github.com/serverlessbuch/jwtAuthorizr"
 },
 {
    "name": "slack-signup-serverless",
    "description": "Serverless signup to Slack and more. Lambda with Python, StepFunctions, and Web front end. Python boilerplate included.",
    "githubUrl": "https://github.com/dzimine/slack-signup-serverless"
 },
 {
    "name": "serverless-graphql-api",
    "description": "Serverless GraphQL API using Lambda and DynamoDB",
    "githubUrl": "https://github.com/boazdejong/serverless-graphql-api"
 },
 {
    "name": "serverless-screenshot",
    "description": "Serverless Screenshot Service using PhantomJS",
    "url": "http://svdgraaf.nl/2016/09/28/Serverless-Screenshot-Service-With-Lambda.html",
    "githubUrl": "https://github.com/svdgraaf/serverless-screenshot"
  },
  {
    "name": "serverless-postgraphql",
    "description": "GraphQL endpoint for PostgreSQL using postgraphql",
    "githubUrl": "https://github.com/rentrop/serverless-postgraphql"
  },
  {
    "name": "serverless-messenger-boilerplate",
    "description": "Serverless messenger bot boilerplate",
    "githubUrl": "https://github.com/SC5/serverless-messenger-boilerplate"
  },
  {
    "name": "serverless-npm-registry",
    "description": "Serverless private npm registry, proxy and cache.",
    "url": "https://craftship.io/open/source/serverless/private/npm/registry/yith/2016/09/26/serverless-yith.html",
    "githubUrl": "https://github.com/craftship/yith"
  },
  {
    "name": "serverless-pokego",
    "description": "Serverless-powered API to fetch nearby Pokemon Go data",
    "githubUrl": "https://github.com/jch254/pokego-serverless"
  },
  {
    "name": "serverless-weekly2pocket-app",
    "description": "Serverless-powered API for sending posts to pocket app",
    "githubUrl": "https://github.com/s0enke/weekly2pocket"
  },
  {
    "name": "serverless-facebook-quotebot",
    "description": "100% Serverless Facebook messenger chatbot which will respond with inspiring quotes",
    "githubUrl": "https://github.com/pmuens/quotebot"
  },
  {
    "name": "serverless-slack-trevorbot",
    "description": "Slack bot for info on where in the world is Trevor Gerhardt?",
    "githubUrl": "https://github.com/conveyal/trevorbot"
  },
  {
    "name": "serverless-garden-aid",
    "description": "IoT Garden Aid Backend",
    "githubUrl": "https://github.com/garden-aid/web-bff"
  },
  {
    "name": "serverless-react-boilerplate",
    "description": "A serverless react boilerplate for offline development",
    "githubUrl": "https://github.com/99xt/serverless-react-boilerplate"
  },
  {
    "name": "serverless-delivery-framework",
    "description": "This is a boilerplate for version release pipeline with serverless framework",
    "githubUrl": "https://github.com/99xt/serverless-delivery-framework"
  },
  {
    "name": "serverless-mailgun-slack",
    "description": "A Serverless function for posting to a Slack Webhook in response to a Mailgun route",
    "githubUrl": "https://github.com/Marcus-L/serverless-mailgun-slack"
  },
  {
    "name": "pfs-email-serverless",
    "description": "This is a lambda function created by the serverless framework. It searches through members in our mongodb who have not been sent emails and sends them an email with their custom token to unlock the pledge free stream. It then marks those members off as already receiving the email.",
    "githubUrl": "https://github.com/SCPR/pfs-email-serverless"
  },
  {
    "name": "plaid cashburndown-service",
    "description": "Service for calculating cash burndown with plaid. Frontend code can be found here: https://github.com/cplee/cashburndown-site",
    "githubUrl": "https://github.com/cplee/cashburndown-service"
  },
  {
    "name": "cordis-serverless",
    "description": "A serverless API for EU Cordis data",
    "githubUrl": "https://github.com/marzeelabs/cordis-serverless"
  },
  {
    "name": "serverless-newsletter-signup",
    "description": "Saves user details into DynamoDB table. Required values are email, first_name and last_name.",
    "githubUrl": "https://github.com/ivanderbu2/serverless-newsletter-signup"
  },
  {
    "name": "serverless-slack-cron",
    "description": "Lambda function which sends messages to Slack channel in regular intervals via cron trigger.",
    "githubUrl": "https://github.com/ivanderbu2/serverless-slack-cron"
  },
  {
    "name": "giphy-bot",
    "description": "giphy-bot for Facebook chat",
    "githubUrl": "https://github.com/tywong/lambda-workshop-2016/tree/master/giphy-bot"
  },
  {
    "name": "jwt-lambda-python",
    "runtime": "python",
    "description": "Minimal proof-of-concept implementation of JWT with Serverless / AWS Lambda",
    "githubUrl": "https://github.com/mikaelmork/jwt-auth.serverless"
  },
  {
    "name": "sls-access-counter",
    "description": "Site visitor counter",
    "githubUrl": "https://github.com/takahashim/sls-access-counter"
  },
  {
    "name": "sls-form-mail",
    "description": "Send SNS email from form data",
    "githubUrl": "https://github.com/takahashim/sls-form-mail"
  },
  {
    "name": "serverless-python-sample",
    "description": "A simple serverless python sample with REST API endpoints and dependencies",
    "githubUrl": "https://github.com/bennybauer/serverless-python-sample"
  },
  {
    "name": "serverless-msg-gateway",
    "description": "A messaging aggregator for kik, skype, twilio, telegram, & messenger. Send and receive messages in a standard format.",
    "githubUrl": "https://github.com/yonahforst/msg-gateway"
  },
  {
    "name": "serverless-AWS-Rekognition-finpics",
    "description": "Use AWS Rekognition to provide a faces search of finpics.com",
    "githubUrl": "https://github.com/rgfindl/finpics"
  },
  {
    "name": "serverless-slack-emojibot",
    "description": "Serverless slack bot for emoji",
    "githubUrl": "https://github.com/markhobson/emojibot"
  },
  {
    "name": "keboola-developer-portal",
    "description": "Keboola developer portal built with Serverless",
    "githubUrl": "https://github.com/keboola/developer-portal"
  },
  {
    "name": "serverless-cloudwatch-rds-custom-metrics",
    "description": "A NodeJS-based MySQL RDS Data Collection script to push Custom Metrics to Cloudwatch with Serverless",
    "githubUrl": "https://github.com/AndrewFarley/serverless-cloudwatch-rds-custom-metrics"
  }, 
  {
    "name": "jrestless-examples",
    "description": "[JRestless](https://github.com/bbilger/jrestless) (Java / JAX-RS) examples for [API Gateway Functions](https://github.com/bbilger/jrestless-examples/tree/master/aws/gateway) ([plain JAX-RS](https://github.com/bbilger/jrestless-examples/blob/master/aws/gateway/aws-gateway-showcase), [Spring](https://github.com/bbilger/jrestless-examples/blob/master/aws/gateway/aws-gateway-spring), [binary data requests/responses](https://github.com/bbilger/jrestless-examples/blob/master/aws/gateway/aws-gateway-binary), [custom authorizers](https://github.com/bbilger/jrestless-examples/blob/master/aws/gateway/aws-gateway-security-custom-authorizer) and [Cognito User Pool authorizers](https://github.com/bbilger/jrestless-examples/blob/master/aws/gateway/aws-gateway-security-cognito-authorizer)), [SNS Functions](https://github.com/bbilger/jrestless-examples/blob/master/aws/sns/aws-sns-usage-example) (asynchronous communication between functions) and [Service Functions](https://github.com/bbilger/jrestless-examples/blob/master/aws/service/aws-service-usage-example) (synchronous HTTP-like communication between functions - transparent through Feign)",
    "githubUrl": "https://github.com/bbilger/jrestless-examples"
  },
  {
    "name": "sc5-serverless-boilerplate",
    "description": "A boilerplate that contains setup for test-driven development",
    "githubUrl": "https://github.com/SC5/sc5-serverless-boilerplate"
  },
  {
    "name": "serverless-blog-to-podcast",
    "description": "Service that reads RSS feed and converts the entries to a podcast feed and audio files using Amazon Polly",
    "githubUrl": "https://github.com/SC5/serverless-blog-to-podcast"
  },
  {
    "name": "offset-trump",
    "description": "Single page app using Serverless (C# runtime) and S3 site hosting. Pledge to do a good thing for the next four years to offset the potential negative effects of the US Presidency",
    "url": "http://www.offsettrump.com",
    "githubUrl": "https://github.com/FLGMwt/offset-trump"
  },
  {
    "name": "serverless-url-shortener",
    "description": "A simple url-shortener, using Serverless framework",
    "githubUrl": "https://github.com/aletheia/serverless-url-shortener"
  },
  {
    "name": "serverless-html-pdf",
    "description": "Service that convert HTML to PDF using PhantomJS's rasterize example.",
    "githubUrl": "https://github.com/calvintychan/serverless-html-pdf"
  },
  {
    "name": "serverless-examples-cached-rds-ws",
    "description": "A serverless framework example project that uses API Gateway, ElastiCache, and RDS PostgreSQL.",
    "githubUrl": "https://github.com/mugglmenzel/serverless-examples-cached-rds-ws"
  },
  {
    "name": "bittman",
    "description": "A serverless project that follows a stock trading algorithm and uses scheduled functions to save data to DynamoDB and send emails through Mailgun.",
    "githubUrl": "https://github.com/rhlsthrm/bittman"
  },
  {
    "name": "adoptable-pet-bot",
    "description": "Tweets adoptable pets using Serverless (Node.js) and AWS Lambda",
    "githubUrl": "https://github.com/lynnaloo/adoptable-pet-bot"
  },
  {
    "name": "owntracks-serverless",
    "description": "A serverless implementation of the OwnTracks HTTP backend",
    "githubUrl": "https://github.com/dschep/owntracks-serverless"
  },
  {
    "name": "serverless-modern-koa",
    "description": "Serverless modern koa starter kit",
    "githubUrl": "https://github.com/barczaG/serverless-modern-koa"
  },
  {
    "name": "Serverless ReactJS Universal Rendering Boilerplate",
    "description": "ReactJS web app Starter kit does universal (isomorphic) rendering with Serverless",
    "githubUrl": "https://github.com/TylorShin/react-universal-in-serverless"
  },
  {
    "name": "Open Bot",
    "description": "An unoptionated Github bot driven by a configuration file in the repository",
    "githubUrl": "https://github.com/open-bot/open-bot"
  },
  {
    "name": "aws-ses-serverless-example",
    "description": "AWS SES example in NodeJS using lambda",
    "githubUrl": "https://github.com/lakshmantgld/aws-ses-serverless-example"
  },
  {
    "name": "AWS API Gateway Serverless project written in Go",
    "description": "A serverless project that contains an API Gateway endpoint powered by a Lambda function written in golang and built using [eawsy/aws-lambda-go-shim](https://github.com/eawsy/aws-lambda-go-shim).",
    "githubUrl": "https://github.com/yunspace/serverless-golang"
  },
  {
   "name": "video-preview-and-analysis-service",
   "description": "An event-driven service that generates labels using Amazon Rekognition and creates preview GIF animation from a video file.",
   "githubUrl": "https://github.com/laardee/video-preview-and-analysis-service"
  },
  {
    "name": "Serverless ES6/7 CRUD API",
    "description": "[Serverless Stack](http://serverless-stack.com) examples of backend CRUD APIs (DynamoDB + Lambda + API Gateway + Cognito User Pool authorizer) for [React.js single-page app](http://demo.serverless-stack.com)",
    "githubUrl": "https://github.com/AnomalyInnovations/serverless-stack-demo-api"
  },
  {
    "name": "SQS Worker with AWS Lambda and CloudWatch Alarms",
    "description": "Process messages stored in SQS with an [auto-scaled AWS Lambda worker](https://sbstjn.com/serverless-sqs-worker-with-aws-lambda.html) function.",
    "githubUrl": "https://github.com/sbstjn/sqs-worker-serverless"
  },
  {
    "name": "serverless-image-manager",
    "description": "image upload / download with resizing. Used API gateway's binary support & serverless",
    "githubUrl": "https://github.com/TylorShin/lambda-image-manager"
  },
  {
    "name": "AWS Lambda Power Tuning (powered by Step Functions)",
    "description": "Build a [Step Functions](https://aws.amazon.com/step-functions/) state machine to optimize your AWS Lambda Function memory/power configuration.",
    "githubUrl": "https://github.com/alexcasalboni/aws-lambda-power-tuning"
  },
  {
    "name": "Amazon Kinesis Streams fan-out via Kinesis Analytics",
    "description": "Use [Amazon Kinesis Analytics](https://aws.amazon.com/kinesis/analytics/) to fan-out your Kinesis Streams and avoid read throttling.",
    "githubUrl": "https://github.com/alexcasalboni/kinesis-streams-fan-out-kinesis-analytics"
 },
 {
    "name": "grants-api-serverless",
    "description": "ES6 API to consume data from an external API, ingest into Elasticsearch and return a queryable endpoint on top of Elasticsearch",
    "githubUrl": "https://github.com/comicrelief/grants-api-serverless"
  },
  {
    "name": "honeyLambda",
    "description": "a simple, serverless application designed to create and monitor URL {honey}tokens, on top of AWS Lambda and Amazon API Gateway",
    "githubUrl": "https://github.com/0x4D31/honeyLambda"
  },
  {
    "name": "faultline",
    "description": "Error tracking tool on AWS managed services.",
    "githubUrl": "https://github.com/faultline/faultline"
  },
  {
    "name": "Stack Overflow Monitor",
    "description": "Monitor Stack Overflow questions and post them in a Slack channel",
    "githubUrl": "https://github.com/picsoung/stackoverflowmonitor"
  },
  {
    "name": "Serverless Analytics",
    "description": "Write your own Google Analytics clone and track website visitors serverless with API Gateway, Kinesis, Lambda, and DynamoDB.",
    "githubUrl": "https://github.com/sbstjn/serverless-analytics"
  },
  {
    "name": "React & Stripe Serverless Ecommerce",
    "description": "Serverless E-Commerce App with AWS Lambda, Stripe and React",
    "githubUrl": "https://github.com/patrick-michelberger/serverless-shop"
  },
  {
    "name": "serverless + medium text-to-speech",
    "description": "Serverless-based, text-to-speech service for Medium articles",
    "githubUrl": "https://github.com/RafalWilinski/serverless-medium-text-to-speech"
  },
  {
    "name": "serverless + java DynamoDB imlementation example",
    "description": " example for java programmers that want to work with AWS-Lambda and DynamoDB",
    "githubUrl": "https://github.com/igorbakman/java-lambda-dynamodb"
  },
  {
    "name": "AWS Cognito Custom User Pool Example",
    "description": "Example CloudFormation custom resource backed by a lambda using Cognito User Pools",
    "githubUrl": "https://github.com/bsdkurt/aws-node-custom-user-pool"
  },
  {
    "name": "serverless + lambda protobuf responses",
    "description": "Demo using API Gateway and Lambda with Protocol Buffer",
    "githubUrl": "https://github.com/theburningmonk/lambda-protobuf-demo"
  },
  {
    "name": "Serverless Telegram Bot",
    "description": "This example demonstrates how to setup an echo Telegram Bot using the Serverless Framework ⚡🤖",
    "githubUrl": "https://github.com/jonatasbaldin/serverless-telegram-bot"
  },
  {
    "name": "Serverless Dashboard For Atom Editor",
    "description": "Atom editor package which allows you to deploy and visualize your serverless services with Serverless Framework on your editor.",
    "githubUrl": "https://github.com/horike37/serverless-dashboard-for-atom"
  },
  {
    "name": "Serverless + lambda + vpc + nat + redis",
    "description": "Demo using API Gateway and Lambda with VPC and NAT to access Internet and AWS Resource",
    "githubUrl": "https://github.com/ittus/aws-lambda-vpc-nat-examples"
  },
  {
    "name": "Serverless Gitlab CI",
    "description": "Simple Gitlab CI template for automatic testing and deployments",
    "githubUrl": "https://github.com/bvincent1/serverless-gitlab-ci"
  },
  {
    "name": "Serverless ffmpeg",
    "description": "Bucket event driven FFMPEG using serverless. Input bucket => Serverless ffmpeg => Output bucket.",
    "githubUrl": "https://github.com/kvaggelakos/serverless-ffmpeg"
  },
  {
    "name": "Serverless SSH Command",
    "description": "Example of executing ssh command with OpenWhisk",
    "githubUrl": "https://github.com/upgle/serverless-openwhisk-ssh"
  },
  {
    "name": "Realtime WW2 Alexa Skill",
    "description": "An alexa skill project that's using Alexa SDK. Can also be used for a working example of serverless-webpack (with use of async/await via babel).",
    "githubUrl": "https://github.com/ceilfors/realtime-ww2-alexa"
  },
  {
    "name": "Serverless Kakao Bot",
    "description": "Easy development for Kakaotalk Bot with Serverless",
    "githubUrl": "https://github.com/JisuPark/serverless-kakao-bot"
  },
  {
    "name": "Serverless Q&A Example",
    "description": "Inspired by the AWS example forum. A multitenancy Q&A template for surveys, forums and more",
    "githubUrl": "https://github.com/jacksoncharles/serverless-qa-template-api"
  },
  {
    "name": "Personal Access Tokens Cron Check",
    "description": "Audit for leaked PAT in your Contentful organization. How to use serverless as cronjobs to keep your Personal Access Tokens secure",
    "githubUrl": "https://github.com/madtrick/cfpat-audit"
  },
  {
    "name": "Serverless sns api",
    "description": "Build a SNS service on AWS, support backend API for SNS by device, by group and by user",
    "githubUrl": "https://github.com/eddielisc/serverless-sns-api"
  },
  {
    "name": "Daily Instance Backups with AMI Rotation",
    "description": "A simple Python application which scans through your entire AWS account for tagged instances, makes daily AMIs of them, and rotates their backups automatically",
    "githubUrl": "https://github.com/AndrewFarley/AWSAutomatedDailyInstanceAMISnapshots"
  },
  {
    "name": "Serverless Instagram Crawler",
    "description": "Instagram hashtag Crawler with Lambda & DynamoDB.",
    "githubUrl": "https://github.com/kimcoder/serverless-instagram-crawler"
  },
  {
    "name": "Serving binary files",
    "description": "Small example showing how to serve binary files using Serverless on AWS with the serverless-apigw-binary plugin, using generated Excel files as an example",
    "githubUrl": "https://github.com/thomastoye/serverless-binary-files-xlsx"
  },
  {
    "name": "Lambda PubSub via SNS Example",
    "description": "Example illustrating the flow: Lambda (publisher) => SNS => Lambda (consumer)",
    "githubUrl": "https://github.com/didil/serverless-lambda-sns-example"
  }
]
